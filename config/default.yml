Chewy/FieldType:
  Description: 'Assure that a type is defined for a Chewy field.'
  Enabled: true
  Include:
    - app/chewy/**/*

Chewy/UpdateIndexArgument:
  Description: 'Prevent single expression in update_index block.'
  Enabled: true

Grape/PreferNamespace:
  Description: 'Prevent usage of namespace aliases.'
  Enabled: true
  StyleGuide: https://github.com/ruby-grape/grape#namespace-validation-and-coercion
  Include:
    - app/api/**/*

Migration/AlwaysBulkChangeTable:
  Description: 'Suggest to always use `bulk: true` when using `change_table`.'
  Enabled: true
  Include:
    - db/migrate/**

Migration/ChangeTableReferences:
  Description: 'Prevent using `t.references` or `t.belongs_to` in a change_table.'
  Enabled: true
  Include:
    - db/migrate/**

Migration/ForeignKeyOption:
  Description: 'Specify the foreign key option to create the constraint.'
  Enabled: true
  Include:
    - db/migrate/**

Migration/SchemaStatementsMethods:
  Description: 'Suggest to use SchemaStatements methods already defined in a migration class.'
  Enabled: true
  Include:
    - db/migrate/**

Migration/StandaloneAddReference:
  Description: 'Prevent using `add_reference/belongs_to` outside of a change_table.'
  Enabled: true
  Include:
    - db/migrate/**

RSpec/AggregateExamples:
  Description: Checks if example group contains two or more aggregatable examples.
  Enabled: true
  StyleGuide: https://rspec.rubystyle.guide/#expectation-per-example
  AddAggregateFailuresMetadata: true
  MatchersWithSideEffects:
    - allow_value
    - allow_values
    - validate_presence_of
    - validate_absence_of
    - validate_length_of
    - validate_inclusion_of
    - validates_exclusion_of

RSpec/ChewyStrategy:
  Description: 'Prevent using Chewy strategy in tests.'
  Enabled: true
  Include:
    - spec/**/*

RSpec/CreateListMax:
  Description: 'Prevent creating to most records with `FactoryBot.create_list`.'
  Enabled: true
  Max: 5
  Include:
    - spec/**/*

RSpec/SidekiqInline:
  Description: 'Prevent using `Sidekiq::Testing.inline!` in spec in favor of stubbing and calling it inline with `new.perform`.'
  Enabled: pending
  StyleGuide: https://github.com/mperham/sidekiq/issues/3495
  Include:
    - spec/**/*

RSpec/SidekiqPerformMatcher:
  Description: 'Prevent using `receive(:perform_async)` in favor of rspec-sidekiq matcher'
  StyleGuide: https://github.com/wspurgin/rspec-sidekiq
  Enabled: true
  Include:
    - spec/**/*

RSpec/StubProducts:
  Description: 'Suggest to use stub_products instead of veil/unveil_product.'
  Enabled: true
  SafeAutoCorrect: false
  Include:
    - spec/**/*

Grape/HelpersIncludeModule:
  Description: 'Prevent using helpers with block to include module'
  Enabled: true
  Include:
    - app/api/**/*

Grape/UnnecessaryNamespace:
  Description: 'Detect unnecessary usage of Grape namespace.'
  Enabled: true
  Include:
    - app/api/**/*

Rails/DestroyAllBang:
  Description: 'Prevent using `destroy_all` in favor of `each(&:destroy!)` to go along Rails/SaveBang cop.'
  StyleGuide: https://rails.rubystyle.guide#save-bang
  Enabled: true

Rails/EnumPrefix:
  Description: 'Set prefix options when using enums.'
  Enabled: true
  StyleGuide: https://github.com/rails/rails/issues/13389#issue-24527737
  Include:
    - app/models/**/*

Rails/EnumStartingValue:
  Description: 'Prevent starting from zero with an enum.'
  Enabled: true
  StyleGuide: https://github.com/petalmd/rubocop-petal/issues/56
  Include:
    - app/models/**/*

Rails/RiskyActiverecordInvocation:
  Description: 'Interpolation, use hash or parameterized syntax.'
  Enabled: true

Chewy/ResetOnType:
  Description: 'Prevent using reset! methods on Chewy type class'
  Enabled: true

RSpec/JsonResponse:
  Description: 'Prevent json_response in favor of response.parsed_body'
  Enabled: true
  SafeAutoCorrect: true
  Include:
    - spec/**/*

Performance/Snif:
  Description: 'Prevent snif in favor of detect'
  Enabled: true

Sidekiq/ConstArgument:
  Description: "Prevent passing constant like Class as arguments in worker's perform method"
  Enabled: true

Sidekiq/DateTimeArgument:
  Description: "Prevent passing Date/Time arguments in worker's perform method"
  Enabled: true

Sidekiq/KeywordArguments:
  Description: "Prevent define keywords arguments in worker's perform method"
  Enabled: true
  Include:
    - app/workers/**/*

Sidekiq/NoNilReturn:
  Description: 'Prevent early nil return in workers'
  Enabled: false
  Include:
    - app/workers/**/*

Sidekiq/PerformInline:
  Description: 'Suggest to use `perform_inline` instead of `new.perform` for Sidekiq workers.'
  Enabled: true

Sidekiq/SymbolArgument:
  Description: "Prevent passing keywords arguments in worker's perform method"
  Enabled: true
  SafeAutoCorrect: false
